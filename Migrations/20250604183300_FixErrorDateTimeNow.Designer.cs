// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using efCourse;

#nullable disable

namespace efCourse.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20250604183300_FixErrorDateTimeNow")]
    partial class FixErrorDateTimeNow
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("efCourse.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("WorkLoad")
                        .HasColumnType("int");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("4ab33fe8-1ee4-48bb-8a98-c82989ec2745"),
                            Description = "Tasks related to work",
                            Name = "Work",
                            WorkLoad = 20
                        },
                        new
                        {
                            CategoryId = new Guid("4ab33fe8-1ee4-48bb-8a98-c82989ec2746"),
                            Description = "Tasks related to personal life",
                            Name = "Personal",
                            WorkLoad = 50
                        });
                });

            modelBuilder.Entity("efCourse.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("4ab33fe8-1ee4-48bb-8a98-c82989ec2333"),
                            CategoryId = new Guid("4ab33fe8-1ee4-48bb-8a98-c82989ec2745"),
                            CreationDate = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Deadline = new DateTime(2025, 6, 11, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Implement the landing page for the new product",
                            TaskPriority = 2,
                            Title = "Develop new feature"
                        },
                        new
                        {
                            TaskId = new Guid("4ab33fe8-1ee4-48bb-8a98-c82989ec2334"),
                            CategoryId = new Guid("4ab33fe8-1ee4-48bb-8a98-c82989ec2746"),
                            CreationDate = new DateTime(2025, 6, 4, 0, 0, 0, 0, DateTimeKind.Local),
                            Deadline = new DateTime(2025, 6, 7, 0, 0, 0, 0, DateTimeKind.Local),
                            Description = "Buy groceries for the week",
                            TaskPriority = 1,
                            Title = "Shopping"
                        });
                });

            modelBuilder.Entity("efCourse.Models.Task", b =>
                {
                    b.HasOne("efCourse.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("efCourse.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
